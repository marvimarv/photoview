services:
  photoview:
    image: viktorstrate/photoview:2
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    hostname: photoview
    container_name: photoview
    restart: unless-stopped
    stop_grace_period: 10s
    ports:
      - "8000:80" ## HTTP port (host:container)
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    environment:
      PHOTOVIEW_DATABASE_DRIVER: sqlite
      PHOTOVIEW_SQLITE_PATH: /home/photoview/database/photoview.db
      PHOTOVIEW_LISTEN_IP: "photoview"
      MAPBOX_TOKEN: ${MAPBOX_TOKEN}
    volumes:
      - "/etc/localtime:/etc/localtime:ro"
      - "/etc/timezone:/etc/timezone:ro"
      - "/home/photoview/database:/home/photoview/database"
      - "/home/photoview/storage:/home/photoview/media-cache"
      - "/home/photoview/media:/photos:ro"
    entrypoint: >
      sh -c "
        mkdir -p /home/photoview/media &&
        chmod -R 755 /home/photoview/media &&
        exec /app/photoview
      "


  ## Watchtower upgrades services automatically (optional)
  watchtower:
    image: containrrr/watchtower:latest
    hostname: watchtower
    container_name: watchtower
    restart: unless-stopped
    environment:
      ## Comment out the next variable if you want Watchtower to auto-update all containers, running on the host,
      ## while now it will update only those with the label "com.centurylinklabs.watchtower.enable=true"
      WATCHTOWER_LABEL_ENABLE: true
      WATCHTOWER_CLEANUP: ${WATCHTOWER_CLEANUP}
      WATCHTOWER_POLL_INTERVAL: ${WATCHTOWER_POLL_INTERVAL}
      WATCHTOWER_TIMEOUT: ${WATCHTOWER_TIMEOUT}
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "~/.docker/config.json:/config.json:ro" ## optional, for authentication if you have a Docker Hub account
      - "/etc/localtime:/etc/localtime:ro"      ## use local time from host
      - "/etc/timezone:/etc/timezone:ro"        ## use timezone from host

  ## Comment out the `mariadb` service if PHOTOVIEW_DATABASE_DRIVER is set to `sqlite` or `postgres` in the .env
  # mariadb:
  #   image: mariadb:lts
  #   labels:
  #     - "com.centurylinklabs.watchtower.enable=true"
  #   hostname: photoview-mariadb
  #   container_name: photoview-mariadb
  #   restart: unless-stopped
  #   stop_grace_period: 5s
  #   ## Optimized MariaDB startup command for better performance and compatibility
  #   command: mariadbd --innodb-buffer-pool-size=512M --transaction-isolation=READ-COMMITTED --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --max-connections=512 --innodb-rollback-on-timeout=OFF --innodb-lock-wait-timeout=120
  #   security_opt: ## see https://github.com/MariaDB/mariadb-docker/issues/434#issuecomment-1136151239
  #     - seccomp:unconfined
  #     - apparmor:unconfined
  #   ## Uncomment next 2 lines if you want to access the database directly
  #   # ports:
  #     # - "3306:3306"
  #   environment:
  #     MARIADB_AUTO_UPGRADE: "1"
  #     MARIADB_DATABASE: ${MARIADB_DATABASE}
  #     MARIADB_USER: ${MARIADB_USER}
  #     MARIADB_PASSWORD: ${MARIADB_PASSWORD}
  #     MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
  #   volumes:
  #     ## Example:
  #     ## - "/host/folder:/container/folder"
  #     - "/etc/localtime:/etc/localtime:ro" ## use local time from host
  #     - "/etc/timezone:/etc/timezone:ro"   ## use timezone from host
  #     - "${HOST_PHOTOVIEW_LOCATION}/database/mariadb:/var/lib/mysql" ## DO NOT REMOVE
  #   healthcheck:
  #     test: healthcheck.sh --connect --innodb_initialized
  #     interval: 1m
  #     timeout: 5s
  #     retries: 5
  #     start_period: 3m

  ## Uncomment the `postgres` service if PHOTOVIEW_DATABASE_DRIVER is set to `postgres` in the .env
  # postgres:
  #   image: postgres:16-alpine
  #   labels:
  #     - "com.centurylinklabs.watchtower.enable=true"
  #   hostname: photoview-pgsql
  #   container_name: photoview-pgsql
  #   restart: unless-stopped
  #   stop_grace_period: 5s
  #   ## Security options for some restricted systems
  #   security_opt:
  #     - seccomp:unconfined
  #     - apparmor:unconfined
  #   ## Uncomment next 2 lines if you want to access the database directly
  #   # ports:
  #     # - 5432:5432
  #   environment:
  #     POSTGRES_DB: ${PGSQL_DATABASE}
  #     POSTGRES_USER: ${PGSQL_USER}
  #     POSTGRES_PASSWORD: ${PGSQL_PASSWORD}
  #     ## See other optional variables in the https://hub.docker.com/_/postgres
  #   volumes:
  #     ## Example:
  #     ## - "/host/folder:/container/folder"
  #     - "/etc/localtime:/etc/localtime:ro" ## use local time from host
  #     - "/etc/timezone:/etc/timezone:ro"   ## use timezone from host
  #     - "${HOST_PHOTOVIEW_LOCATION}/database/postgres:/var/lib/postgresql/data" ## DO NOT REMOVE
  #   healthcheck:
  #     test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
  #     interval: 1m
  #     timeout: 5s
  #     retries: 5
  #     start_period: 3m
